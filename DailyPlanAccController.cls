public with sharing class DailyPlanAccController {
    @AuraEnabled(cacheable=true)
    public static List<Account> getAccountList() {
        return [SELECT  Name,Billing_Area__c,Last_Visited_Days__c,Account_Record_Type_Name__c,Last_Order_Date__c,No_of_Visits_in_last_12_months__c,Last_Visit_Date__c,Last_Order_Amount__c,Number_of_Order_Last_Year__c,Number_of_Orders_Last_Quarter_Month__c,Revenue_Last_Year__c,Revenue_Last_Quarter_Month__c,Address_Concat__c, Account_Target_Class__c,Target__c,Last_Visited__c,Sales_Order__c,Invoice__c,LastOrdrDateString__c,LastVisitDateString__c 
                FROM Account ORDER BY Name ASC];
    }
    
    @AuraEnabled(cacheable=true)
    public static List<Tour_Plan_Detail__c> getTourPLanDetailList() {
        return [SELECT  Id,Date__c, User__c
                FROM Tour_Plan_Detail__c ORDER BY Date__c DESC];
    }
    
    @AuraEnabled 
    public static void saveAccountRec(String objAcc,String dpid, String visitTimeMap, 
                                         String hqVisitApex, String hqCommentApex,
                                         String leaveTypeApex, String leaveTypeCommentApex){
        System.debug('visittime'+ visitTimeMap);
                                             
        System.debug('hqVisitApex '+ hqVisitApex);
        System.debug('hqCommentApex '+ hqCommentApex);
                                             
        System.debug('leaveTypeApex '+ leaveTypeApex);
        System.debug('leaveTypeCommentApex '+ leaveTypeCommentApex);
                                             
        Map<String, Object> visitStringToMap = (Map<String, Object>) JSON.deserializeUntyped(visitTimeMap);
        System.debug('visitStringToMap'+ visitStringToMap);
        
        //System.debug(timeChange);
        Set<Id> accId = new Set<Id>();
        List<Account> accList = (List<Account>) JSON.deserialize(objAcc,List<Account>.Class);
        System.debug('accList '+ accList);
        for(Account a: accList){
            accId.add(a.Id);
        }
        List<Account> myAccount = [Select Id,Name,Address_Concat__c,Account_Record_Type_Name__c,Account_Target_Class__c from Account where Id IN :accId];
        list<Daily_Plan_Detail__c> DpdList = new list<Daily_Plan_Detail__c>();
        System.debug(objAcc);
        if(myAccount != null){
            for (Account acc:myAccount){
                Daily_Plan_Detail__c Dpd = new Daily_Plan_Detail__c();
                Dpd.Account_Name__c = acc.Name;
                Dpd.Account_Class__c = acc.Account_Target_Class__c;
                Dpd.Account_Type__c = acc.Account_Record_Type_Name__c;
                Dpd.Account_Address__c = acc.Address_Concat__c;
                
                Dpd.Daily_Plan__c = dpid;
                string Timevisit = (string)visitStringToMap.get(acc.Id);
        
              // Dpd.Visit_Time__c = Time.newInstance(Timevisit);
              Dpd.Visit_Time__c = convertVisitTime(Timevisit);
                
                try{Address ad=acc.ShippingAddress;
                    Dpd.Account_Address__c =ad.getCity();
                    Dpd.Account_Type__c = acc.Account_Record_Type_Name__c;
                    Dpd.Account_Class__c = acc.Account_Target_Class__c;
                    Dpd.Activity_Type__c = 'Field Visit';
                   }catch(Exception e){}
                
                DpdList.add(Dpd);
                System.debug(Dpd);
            }            
        }
       if(hqVisitApex!= Null || (hqCommentApex!= Null && String.IsNotBlank(hqCommentApex))){                                   
        Daily_Plan_Detail__c Dpd = new Daily_Plan_Detail__c();
        Dpd.Daily_Plan__c = dpid;
        Dpd.HQ_Visit__c = hqVisitApex;
        Dpd.Plan_Remarks__c = hqCommentApex;
        Dpd.Activity_Type__c = 'HQ Visit';
        DpdList.add(Dpd);
           }
                                             
       if(leaveTypeApex!= Null || (leaveTypeCommentApex!= Null && String.IsNotBlank(leaveTypeCommentApex))){
        Daily_Plan_Detail__c DpdLeave = new Daily_Plan_Detail__c();
        DpdLeave.Daily_Plan__c = dpid;
        DpdLeave.Leave_Taken__c = leaveTypeApex;
        DpdLeave.Plan_Remarks__c = leaveTypeCommentApex;
        DpdLeave.Activity_Type__c = 'Leave';   
        DpdList.add(DpdLeave);                             
        }        
        try{
            insert DpdList;
        }
        catch(Exception ex) {
            throw new AuraHandledException(ex.getMessage());
        }
        
    } 
    
    @AuraEnabled 
    public static void saveAccountRecord(String objAcc,String dpid, String visitTimeMap, 
                                         String hqVisitApex, String hqVisitTimeApex, String hqCommentApex,
                                         String leaveTypeApex, String leaveTypeCommentApex){
        System.debug('visittime'+ visitTimeMap);
                                             
        System.debug('hqVisitApex '+ hqVisitApex);
        System.debug('hqVisitTimeApex '+ hqVisitTimeApex);                                             
        System.debug('hqCommentApex '+ hqCommentApex);
                                             
        System.debug('leaveTypeApex '+ leaveTypeApex);
        System.debug('leaveTypeCommentApex '+ leaveTypeCommentApex);
                                             
        Map<String, Object> visitStringToMap = (Map<String, Object>) JSON.deserializeUntyped(visitTimeMap);
        System.debug('visitStringToMap'+ visitStringToMap);
        
        //System.debug(timeChange);
        Set<Id> accId = new Set<Id>();
        List<Account> accList = (List<Account>) JSON.deserialize(objAcc,List<Account>.Class);
        System.debug('accList '+ accList);
        for(Account a: accList){
            accId.add(a.Id);
        }
        List<Account> myAccount = [Select Id,Name,Address_Concat__c,Account_Record_Type_Name__c,Account_Target_Class__c from Account where Id IN :accId];
        list<Daily_Plan_Detail__c> DpdList = new list<Daily_Plan_Detail__c>();
        System.debug(objAcc);
        if(myAccount != null){
            for (Account acc:myAccount){
                Daily_Plan_Detail__c Dpd = new Daily_Plan_Detail__c();
                Dpd.Account_Name__c = acc.Name;
                Dpd.Account_Class__c = acc.Account_Target_Class__c;
                Dpd.Account_Type__c = acc.Account_Record_Type_Name__c;
                Dpd.Account_Address__c = acc.Address_Concat__c;
                
                Dpd.Daily_Plan__c = dpid;
                string Timevisit = (string)visitStringToMap.get(acc.Id);
        
              // Dpd.Visit_Time__c = Time.newInstance(Timevisit);
              Dpd.Visit_Time__c = convertVisitTime(Timevisit);
                
                try{Address ad=acc.ShippingAddress;
                    Dpd.Account_Address__c =ad.getCity();
                    Dpd.Account_Type__c = acc.Account_Record_Type_Name__c;
                    Dpd.Account_Class__c = acc.Account_Target_Class__c;
                    Dpd.Activity_Type__c = 'Field Visit';
                   }catch(Exception e){}
                
                DpdList.add(Dpd);
                System.debug(Dpd);
            }            
        }
       if(hqVisitApex!= Null || hqVisitTimeApex!=null || (hqCommentApex!= Null && String.IsNotBlank(hqCommentApex))){                                   
        Daily_Plan_Detail__c Dpd = new Daily_Plan_Detail__c();
        Dpd.Daily_Plan__c = dpid;
        Dpd.HQ_Visit__c = hqVisitApex;
        Dpd.Visit_Time__c = convertVisitTime(hqVisitTimeApex);
        Dpd.Plan_Remarks__c = hqCommentApex;
        Dpd.Activity_Type__c = 'HQ Visit';
        DpdList.add(Dpd);
           }
                                             
       if(leaveTypeApex!= Null || (leaveTypeCommentApex!= Null && String.IsNotBlank(leaveTypeCommentApex))){
        Daily_Plan_Detail__c DpdLeave = new Daily_Plan_Detail__c();
        DpdLeave.Daily_Plan__c = dpid;
        DpdLeave.Leave_Taken__c = leaveTypeApex;
        DpdLeave.Plan_Remarks__c = leaveTypeCommentApex;
        DpdLeave.Activity_Type__c = 'Leave';   
        DpdList.add(DpdLeave);                             
        }        
        try{
            insert DpdList;
        }
        catch(Exception ex) {
            throw new AuraHandledException(ex.getMessage());
        }
        
    }
    public static Time convertVisitTime(String visitTimeMap){
    String[] strTimeSplit = visitTimeMap.split(':');
        System.debug(strTimeSplit);
        Time timeChange = Time.newInstance( Integer.valueOf(strTimeSplit[0]) //hour
                                           ,Integer.valueOf(strTimeSplit[1]) //min
                                           ,0                                //sec
                                           ,0);
       return timeChange;
    }
    
    @AuraEnabled
    public static void UpdateDpdRecord(String objAcc,String Dpdrecordid){
        System.debug(objAcc);
        Set<Id> accId = new Set<Id>();
        List<Daily_Plan_Detail__c> accList = (List<Daily_Plan_Detail__c>) JSON.deserialize(objAcc,List<Daily_Plan_Detail__c>.Class);
        System.debug('accList '+ accList);
        for(Daily_Plan_Detail__c a: accList){
            accId.add(a.Id);
        }
        List<Daily_Plan_Detail__c> myAccount = [Select Id,Daily_Plan__c from Daily_Plan_Detail__c where Id IN :accId];
        
        System.debug(objAcc);
        if(myAccount != null){
            for (Daily_Plan_Detail__c acc:myAccount){
                acc.Daily_Plan__c = Dpdrecordid;
            }
        }
        
        try{
            update myAccount;
        }
        catch(Exception ex) {
            throw new AuraHandledException(ex.getMessage());
        }
        
    }

    public static void fakeMethod(){
        Integer i = 0;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        
    
      }
    
    
    
}